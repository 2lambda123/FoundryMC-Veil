plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
    id 'idea'
}

archivesBaseName = "${mod_name}-fabric-${minecraft_version}"
if (System.getenv('BUILD_NUMBER') != null) {
    version += "." + System.getenv('BUILD_NUMBER')
}
repositories {
    maven {
        setUrl("https://dl.bintray.com/s1m0nw1/KtsRunner")
    }
    flatDir {
        dirs project(":Common").file("libs")
    }
}
dependencies {
    annotationProcessor("com.github.LlamaLad7:MixinExtras:0.1.1")
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation("net.fabricmc:fabric-language-kotlin:1.7.4+kotlin.1.6.21")
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    implementation 'com.github.LlamaLad7:MixinExtras:0.1.1'
    implementation project(":Common")
    include(implementation("org.joml:joml:1.10.5"))
}

compileKotlin {
    source(project(":Common").sourceSets.main.kotlin)
}


loom {
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }

    accessWidenerPath.set(project(":Common").file("src/main/resources/veil.accesswidener"))
    mixin {
        defaultRefmapName.set("veil.refmap.json")
    }
}


processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

jar {
    from("LICENSE") {
        rename { "${it}_${mod_name}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
