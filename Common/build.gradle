plugins {
    id 'java'
    id 'org.spongepowered.gradle.vanilla' version '0.2.1-SNAPSHOT'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

archivesBaseName = "${mod_name}-common-${minecraft_version}"
if (System.getenv('BUILD_NUMBER') != null) {
    version += "." + System.getenv('BUILD_NUMBER')
}
configurations {
    implementation.extendsFrom(shadow)
}
minecraft {
    version(minecraft_version)
    runs {   
        if (project.hasProperty('common_runs_enabled') ? project.findProperty('common_runs_enabled').toBoolean() : true) {
        
            server(project.hasProperty('common_server_run_name') ? project.findProperty('common_server_run_name') : 'vanilla_server') {
                workingDirectory(this.file("run"))
            }
            client(project.hasProperty('common_client_run_name') ? project.findProperty('common_client_run_name') : 'vanilla_client') {
                workingDirectory(this.file("run"))
            }
        }
    }
    accessWideners(project.file("src/main/resources/veil.accesswidener"))
}
project.ext.jomlVersion = "1.10.5"
repositories {
    maven {
        setUrl("https://dl.bintray.com/s1m0nw1/KtsRunner")
    }
    flatDir {
        dirs project(":Common").file("libs")
    }
}
dependencies {
    annotationProcessor("com.github.LlamaLad7:MixinExtras:0.1.1")
     compileOnly group:'org.spongepowered', name:'mixin', version:'0.8.5'
     implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    implementation 'com.github.LlamaLad7:MixinExtras:0.1.1'
    shadow("org.joml:joml:1.10.5")
}
shadowJar{
    configurations = [project.configurations.shadow]
    relocate 'org.joml', 'veil.joml'
    mergeServiceFiles()
}
processResources {

    def buildProps = project.properties.clone()

    filesMatching(['pack.mcmeta']) {

        expand buildProps
    }
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}