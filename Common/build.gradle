plugins {
    id 'idea'
    id 'java'
    id 'maven-publish'
    id 'org.spongepowered.gradle.vanilla' version '0.2.1-SNAPSHOT'
}
base {
    archivesName = "${mod_name}-common-${minecraft_version}"
}
minecraft {
    version(minecraft_version)
    if(file("src/main/resources/${mod_id}.accesswidener").exists()){
        accessWideners(file("src/main/resources/${mod_id}.accesswidener"))
    }
}
if (System.getenv('BUILD_NUMBER') != null) {
    version += "." + System.getenv('BUILD_NUMBER')
}

test {
    useJUnitPlatform()
}

dependencies {
    compileOnly 'org.spongepowered:mixin:0.8.5'
    compileOnly 'org.jetbrains:annotations:24.0.1'

    implementation "io.github.douira:glsl-transformer:${glsl_transformer_version}"
    implementation("gg.moonflower:molang-compiler:${molang_compiler_version}")

    implementation "io.github.spair:imgui-java-binding:$imgui_version"
    implementation ("io.github.spair:imgui-java-lwjgl3:$imgui_version") {
        exclude group: 'org.lwjgl'
        exclude group: 'org.lwjgl.lwjgl'
    }

    implementation "org.lwjgl:lwjgl-opencl:$lwjgl_version"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId base.archivesName.get()
            from components.java
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}