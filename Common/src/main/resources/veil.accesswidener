accessWidener v1 named
accessible field net/minecraft/client/renderer/EffectInstance samplerMap Ljava/util/Map;
accessible class net/minecraft/client/renderer/RenderType$CompositeRenderType
accessible method net/minecraft/client/renderer/RenderType$CompositeRenderType state ()Lnet/minecraft/client/renderer/RenderType$CompositeState;
accessible field net/minecraft/client/renderer/RenderStateShard$ShaderStateShard shader Ljava/util/Optional;
accessible field net/minecraft/client/renderer/PostChain passes Ljava/util/List;
accessible method net/minecraft/client/renderer/GameRenderer getFov (Lnet/minecraft/client/Camera;FZ)D
accessible class com/mojang/blaze3d/preprocessor/GlslPreprocessor$Context
accessible class net/minecraft/client/renderer/RenderStateShard$OutputStateShard
accessible field net/minecraft/client/Minecraft timer Lnet/minecraft/client/Timer;
accessible method net/minecraft/client/renderer/RenderType create (Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;IZZLnet/minecraft/client/renderer/RenderType$CompositeState;)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType;
accessible field net/minecraft/client/renderer/RenderStateShard LIGHTMAP Lnet/minecraft/client/renderer/RenderStateShard$LightmapStateShard;
accessible field net/minecraft/client/renderer/RenderStateShard RENDERTYPE_CUTOUT_SHADER Lnet/minecraft/client/renderer/RenderStateShard$ShaderStateShard;
accessible field net/minecraft/client/renderer/RenderStateShard BLOCK_SHEET Lnet/minecraft/client/renderer/RenderStateShard$TextureStateShard;
accessible field net/minecraft/client/renderer/ItemBlockRenderTypes TYPE_BY_BLOCK Ljava/util/Map;
accessible class net/minecraft/client/renderer/RenderStateShard$TextureStateShard
accessible field net/minecraft/client/renderer/RenderStateShard NO_OVERLAY Lnet/minecraft/client/renderer/RenderStateShard$OverlayStateShard;
accessible field net/minecraft/client/renderer/RenderStateShard NO_LIGHTMAP Lnet/minecraft/client/renderer/RenderStateShard$LightmapStateShard;
accessible field net/minecraft/client/renderer/RenderStateShard NO_TRANSPARENCY Lnet/minecraft/client/renderer/RenderStateShard$TransparencyStateShard;
accessible field net/minecraft/client/renderer/RenderStateShard TRANSLUCENT_TRANSPARENCY Lnet/minecraft/client/renderer/RenderStateShard$TransparencyStateShard;
accessible method net/minecraft/client/renderer/ItemInHandRenderer renderPlayerArm (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFFLnet/minecraft/world/entity/HumanoidArm;)V
accessible field net/minecraft/client/renderer/entity/ItemRenderer textureManager Lnet/minecraft/client/renderer/texture/TextureManager;
accessible method net/minecraft/client/renderer/PostChain load (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/resources/ResourceLocation;)V
accessible class net/minecraft/client/renderer/RenderType$CompositeState

# Shader Instance Wrapper
accessible field net/minecraft/client/renderer/ShaderInstance uniformMap Ljava/util/Map;
accessible class com/mojang/blaze3d/platform/GlStateManager$TextureState
accessible field com/mojang/blaze3d/platform/GlStateManager TEXTURES [Lcom/mojang/blaze3d/platform/GlStateManager$TextureState;

# Uniform Wrapper
extendable method com/mojang/blaze3d/shaders/Uniform set (F)V
extendable method com/mojang/blaze3d/shaders/Uniform set (FF)V
extendable method com/mojang/blaze3d/shaders/Uniform set (IF)V
extendable method com/mojang/blaze3d/shaders/Uniform set (FFF)V
extendable method com/mojang/blaze3d/shaders/Uniform set (Lorg/joml/Vector3f;)V
extendable method com/mojang/blaze3d/shaders/Uniform set (FFFF)V
extendable method com/mojang/blaze3d/shaders/Uniform set (Lorg/joml/Vector4f;)V
extendable method com/mojang/blaze3d/shaders/Uniform setSafe (FFFF)V
extendable method com/mojang/blaze3d/shaders/Uniform setSafe (IIII)V
extendable method com/mojang/blaze3d/shaders/Uniform set (I)V
extendable method com/mojang/blaze3d/shaders/Uniform set (II)V
extendable method com/mojang/blaze3d/shaders/Uniform set (III)V
extendable method com/mojang/blaze3d/shaders/Uniform set (IIII)V
extendable method com/mojang/blaze3d/shaders/Uniform set ([F)V
extendable method com/mojang/blaze3d/shaders/Uniform setMat2x2 (FFFF)V
extendable method com/mojang/blaze3d/shaders/Uniform setMat2x3 (FFFFFF)V
extendable method com/mojang/blaze3d/shaders/Uniform setMat2x4 (FFFFFFFF)V
extendable method com/mojang/blaze3d/shaders/Uniform setMat3x2 (FFFFFF)V
extendable method com/mojang/blaze3d/shaders/Uniform setMat3x3 (FFFFFFFFF)V
extendable method com/mojang/blaze3d/shaders/Uniform setMat3x4 (FFFFFFFFFFFF)V
extendable method com/mojang/blaze3d/shaders/Uniform setMat4x2 (FFFFFFFF)V
extendable method com/mojang/blaze3d/shaders/Uniform setMat4x3 (FFFFFFFFFFFF)V
extendable method com/mojang/blaze3d/shaders/Uniform setMat4x4 (FFFFFFFFFFFFFFFF)V
extendable method com/mojang/blaze3d/shaders/Uniform set (Lorg/joml/Matrix4f;)V
extendable method com/mojang/blaze3d/shaders/Uniform set (Lorg/joml/Matrix3f;)V

# Deferred Renderer
mutable field net/minecraft/client/renderer/RenderType$CompositeState states Lcom/google/common/collect/ImmutableList;
accessible field com/mojang/blaze3d/vertex/BufferUploader lastImmediateBuffer Lcom/mojang/blaze3d/vertex/VertexBuffer;

# Quasar
accessible class net/minecraft/resources/RegistryDataLoader$Loader
accessible method net/minecraft/resources/RegistryDataLoader createContext (Lnet/minecraft/core/RegistryAccess;Ljava/util/List;)Lnet/minecraft/resources/RegistryOps$RegistryInfoLookup;

# Dynamic Render Types
accessible method net/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder <init> ()V
accessible class net/minecraft/client/renderer/RenderStateShard$EmptyTextureStateShard
accessible class net/minecraft/client/renderer/RenderStateShard$TransparencyStateShard
accessible class net/minecraft/client/renderer/RenderStateShard$DepthTestStateShard
accessible class net/minecraft/client/renderer/RenderStateShard$CullStateShard
accessible class net/minecraft/client/renderer/RenderStateShard$LightmapStateShard
accessible class net/minecraft/client/renderer/RenderStateShard$OverlayStateShard
accessible class net/minecraft/client/renderer/RenderStateShard$LayeringStateShard
accessible class net/minecraft/client/renderer/RenderStateShard$OutputStateShard
accessible class net/minecraft/client/renderer/RenderStateShard$TexturingStateShard
accessible class net/minecraft/client/renderer/RenderStateShard$WriteMaskStateShard
accessible class net/minecraft/client/renderer/RenderStateShard$LineStateShard
accessible class net/minecraft/client/renderer/RenderStateShard$ColorLogicStateShard
accessible class net/minecraft/client/renderer/RenderStateShard$OffsetTexturingStateShard
accessible class net/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard
accessible class net/minecraft/client/renderer/RenderType$OutlineProperty