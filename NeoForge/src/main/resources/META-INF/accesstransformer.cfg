public net.minecraft.client.renderer.EffectInstance samplerMap # samplerMap
public net.minecraft.client.renderer.RenderType$CompositeRenderType
public net.minecraft.client.renderer.RenderType$CompositeRenderType state # state
public net.minecraft.client.renderer.RenderStateShard$ShaderStateShard shader # shader
public net.minecraft.client.renderer.PostChain passes # passes
public net.minecraft.client.renderer.GameRenderer getFov(Lnet/minecraft/client/Camera;FZ)D # getFov
public com.mojang.blaze3d.preprocessor.GlslPreprocessor$Context
public net.minecraft.client.renderer.RenderStateShard$OutputStateShard
public net.minecraft.client.renderer.RenderType create(Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;IZZLnet/minecraft/client/renderer/RenderType$CompositeState;)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType;# create
public net.minecraft.client.renderer.RenderStateShard LIGHTMAP # LIGHTMAP
public net.minecraft.client.renderer.RenderStateShard RENDERTYPE_CUTOUT_SHADER # RENDERTYPE_CUTOUT_SHADER
public net.minecraft.client.renderer.RenderStateShard BLOCK_SHEET # BLOCK_SHEET
public net.minecraft.client.renderer.ItemBlockRenderTypes TYPE_BY_BLOCK # TYPE_BY_BLOCK
public net.minecraft.client.renderer.RenderStateShard$TextureStateShard
public net.minecraft.client.renderer.RenderStateShard NO_OVERLAY # NO_OVERLAY
public net.minecraft.client.renderer.RenderStateShard NO_LIGHTMAP # NO_LIGHTMAP
public net.minecraft.client.renderer.RenderStateShard NO_TRANSPARENCY # NO_TRANSPARENCY
public net.minecraft.client.renderer.RenderStateShard TRANSLUCENT_TRANSPARENCY # TRANSLUCENT_TRANSPARENCY
public net.minecraft.client.renderer.ItemInHandRenderer renderPlayerArm(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFFLnet/minecraft/world/entity/HumanoidArm;)V # renderPlayerArm
public net.minecraft.client.renderer.entity.ItemRenderer textureManager # textureManager
public net.minecraft.client.renderer.PostChain load(Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/resources/ResourceLocation;)V # load
public net.minecraft.client.renderer.RenderType$CompositeState$CompositeStateBuilder

# Shader Instance Wrapper
public net.minecraft.client.renderer.ShaderInstance uniformMap # uniformMap

# Uniform Wrapper
public-f com.mojang.blaze3d.shaders.Uniform set(F)V # set
public-f com.mojang.blaze3d.shaders.Uniform set(FF)V # set
public-f com.mojang.blaze3d.shaders.Uniform set(IF)V # set
public-f com.mojang.blaze3d.shaders.Uniform set(FFF)V # set
public-f com.mojang.blaze3d.shaders.Uniform set(Lorg/joml/Vector3f;)V # set
public-f com.mojang.blaze3d.shaders.Uniform set(FFFF)V # set
public-f com.mojang.blaze3d.shaders.Uniform set(Lorg/joml/Vector4f;)V # set
public-f com.mojang.blaze3d.shaders.Uniform setSafe(FFFF)V # setSafe
public-f com.mojang.blaze3d.shaders.Uniform setSafe(IIII)V # setSafe
public-f com.mojang.blaze3d.shaders.Uniform set(IIII)V # set
public-f com.mojang.blaze3d.shaders.Uniform set(I)V # set
public-f com.mojang.blaze3d.shaders.Uniform set(II)V # set
public-f com.mojang.blaze3d.shaders.Uniform set(III)V # set
public-f com.mojang.blaze3d.shaders.Uniform set(IIII)V # set
public-f com.mojang.blaze3d.shaders.Uniform set([F)V # set
public-f com.mojang.blaze3d.shaders.Uniform setMat2x2(FFFF)V # setMat2x2
public-f com.mojang.blaze3d.shaders.Uniform setMat2x3(FFFFFF)V # setMat2x3
public-f com.mojang.blaze3d.shaders.Uniform setMat2x4(FFFFFFFF)V # setMat2x4
public-f com.mojang.blaze3d.shaders.Uniform setMat3x2(FFFFFF)V # setMat3x2
public-f com.mojang.blaze3d.shaders.Uniform setMat3x3(FFFFFFFFF)V # setMat3x3
public-f com.mojang.blaze3d.shaders.Uniform setMat3x4(FFFFFFFFFFFF)V # setMat3x4
public-f com.mojang.blaze3d.shaders.Uniform setMat4x2(FFFFFFFF)V # setMat4x2
public-f com.mojang.blaze3d.shaders.Uniform setMat4x3(FFFFFFFFFFFF)V # setMat4x3
public-f com.mojang.blaze3d.shaders.Uniform setMat4x4(FFFFFFFFFFFFFFFF)V # setMat4x4
public-f com.mojang.blaze3d.shaders.Uniform set(Lorg/joml/Matrix4f;)V # set
public-f com.mojang.blaze3d.shaders.Uniform set(Lorg/joml/Matrix3f;)V # set

# Deferred Renderer
public-f net.minecraft.client.renderer.RenderType$CompositeState states # states
public net.minecraft.client.renderer.RenderType$CompositeRenderType state()Lnet/minecraft/client/renderer/RenderType$CompositeState; # state
