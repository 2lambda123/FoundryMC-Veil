#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_image_load_store: enable
#extension GL_ARB_shader_image_size: enable

uniform sampler2D upSampleTex;
uniform layout(rgba16f) restrict image2D dstImg;

uniform float multiplier;

#include veil:sampling

#ifdef BLOOM_LOW_QUALITY
    #define SAMPLE_FUNCTION UpsampleBox
#else
    #define SAMPLE_FUNCTION UpsampleTent
#endif

layout(local_size_x = 8, local_size_y = 4) in;
void main() {
    ivec2 texel = ivec2(gl_GlobalInvocationID.xy);
    ivec2 dstSize = ivec2(imageSize(dstImg));

    if (texel.x >= dstSize.x || texel.y >= dstSize.y) return;

    vec2 texCoord = vec2(texel) / vec2(dstSize-1);
    vec2 oneTexel = 1./vec2(dstSize-1);

    vec4 color = imageLoad(dstImg, texel);
    color.rgb += SAMPLE_FUNCTION(upSampleTex, texCoord, oneTexel, vec4(1.)).rgb * multiplier;
    imageStore(dstImg, texel, color);
}